# 1. Create required directories:
# ```bash
# mkdir -p data logs
# chmod 770 data logs
# ```

# 2. Start the services:
# ```bash
# docker compose up -d
# ```

# 3. View logs:
# ```bash
# docker compose logs -f
# ```

# 4. Stop services:
# ```bash
# docker compose down
# ```

version: '3.9'

services:
  agent-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - AGENT_UID=10001
        - AGENT_GID=10001
    image: agent-api:latest
    container_name: agent-api
    restart: unless-stopped
    environment:
      - WORKSPACE_DIR=agent_workspace
      - WORKERS=4
      - TIMEOUT=120
      - LOG_LEVEL=warning
      - MAX_REQUESTS=10000
    ports:
      - "8000:8000"
    volumes:
      - type: volume
        source: agent_data
        target: /agent_workspace/data
      - type: volume
        source: agent_logs
        target: /agent_workspace/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - agent_network

networks:
  agent_network:
    name: agent_network
    driver: bridge
    internal: true
    driver_opts:
      com.docker.network.bridge.name: br-agent
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
          ip_range: 172.28.5.0/24
          gateway: 172.28.5.1

volumes:
  agent_data:
    name: agent_data
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data
      o: bind
  agent_logs:
    name: agent_logs
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/logs
      o: bind